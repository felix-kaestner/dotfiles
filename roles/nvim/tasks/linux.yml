---
- name: Find previous neovim installation
  ansible.builtin.find:
    paths: "/usr/local"
    patterns: "**nvim**"
    file_type: any
    recurse: true
  register: nvim_files

- name: Remove existing neovim installation
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nvim_files.files | map(attribute='path') }}"
  become: true

- name: Create temporary file
  ansible.builtin.tempfile:
    state: file
    prefix: "nvim"
    suffix: ".tar.gz"
  register: nvim_archive

- name: Download neovim
  ansible.builtin.get_url:
    url: "https://github.com/neovim/neovim/releases/download/nightly/nvim-linux-{{ ansible_architecture }}.tar.gz"
    dest: "{{ nvim_archive.path }}"
    checksum: "sha256:https://github.com/neovim/neovim/releases/download/nightly/shasum.txt"

- name: Extract neovim
  ansible.builtin.unarchive:
    src: "{{ nvim_archive.path }}"
    dest: "/usr/local"
    remote_src: true
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"
    extra_opts:
      - "--strip-components=1"
  become: true

- name: Remove temporary file
  ansible.builtin.file:
    path: "{{ nvim_archive.path }}"
    state: absent
