---
- name: Set system architecture
  ansible.builtin.set_fact:
    k8s_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }}"

- name: Ensure ~/.local/bin exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    state: directory
    mode: "0755"

- name: Remove existing kubectl & k9s executables
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ ansible_env.HOME }}/.local/bin/kubectl"
    - "{{ ansible_env.HOME }}/.local/bin/k9s"

- name: Get latest kubectl version
  ansible.builtin.uri:
    url: "https://dl.k8s.io/release/stable.txt"
    return_content: true
  register: kubectl_release

- name: Download kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/{{ kubectl_release.content }}/bin/linux/{{ k8s_arch }}/kubectl"
    dest: "{{ ansible_env.HOME }}/.local/bin/kubectl"
    checksum: "sha256:https://dl.k8s.io/release/{{ kubectl_release.content }}/bin/linux/{{ k8s_arch }}/kubectl.sha256"
    mode: "0755"

- name: Get latest k9s version
  ansible.builtin.uri:
    url: "https://api.github.com/repos/derailed/k9s/releases/latest"
  register: k9s_release

- name: Create temporary file
  ansible.builtin.tempfile:
    state: file
    prefix: k9s
    suffix: ".tar.gz"
  register: k9s_archive

- name: Download k9s
  ansible.builtin.get_url:
    url: "https://github.com/derailed/k9s/releases/download/{{ k9s_release.json.tag_name }}/k9s_{{ ansible_system }}_{{ k8s_arch }}.tar.gz"
    dest: "{{ k9s_archive.path }}"
    checksum: "sha256:https://github.com/derailed/k9s/releases/download/{{ k9s_release.json.tag_name }}/checksums.sha256"

- name: Extract k9s
  ansible.builtin.unarchive:
    src: "{{ k9s_archive.path }}"
    dest: "{{ ansible_env.HOME }}/.local/bin"
    remote_src: true
    include:
      - "k9s"

- name: Remove temporary file
  ansible.builtin.file:
    path: "{{ k9s_archive.path }}"
    state: absent
