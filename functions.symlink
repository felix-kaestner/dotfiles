# ~/.functions: set of predefined shell functions

keys() {
    gpg --list-secret-keys --keyid-format LONG
}

reloadgpg() {
    gpg-connect-agent updatestartuptty /bye >/dev/null
}

watch() {
    local src=$1 cmd=${@:2} files=

    if git -C "$src" rev-parse --git-dir > /dev/null 2>&1; then
        files=$(git -C "$src" ls-files)
    else
        files=$(find "$src" -type f)
    fi

    echo "$files" | entr -rsc "$cmd"
}

dind() {
    docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock:ro -v $(pwd):/workspace -w /workspace docker /bin/ash
}

dr() {
    docker run --rm -it -w /workspace -v $(pwd):/workspace $@
}

pr() {
    case $(git config --get remote.origin.url) in
        git@github.com*) gh pr create $@ ;;
        git@gitlab.com*) glab mr create $@ ;;
        *) ;;
    esac
}

# Taken from: https://github.com/ohmybash/oh-my-bash/blob/master/lib/base.sh#L88
extract() {
    if [ -f $1 ]; then
        case $1 in
        *.tar.bz2) tar xjf $1 ;;
        *.tar.gz) tar xzf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.rar) rar x $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar xf $1 ;;
        *.tbz2) tar xjf $1 ;;
        *.tgz) tar xzf $1 ;;
        *.zip) unzip $1 ;;
        *.Z) uncompress $1 ;;
        *.7z) 7z x $1 ;;
        *) echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

wo() {
	[ -x "$(command -v timer)" ] || go install github.com/caarlos0/timer@latest
    timer 50m -n "Work"
    if [ $? = 0 ]; then
        case $(uname -s) in
        'Linux')
            [ -x "$(command -v notify-send)" ] && notify-send "Work Timer is up!" "Take a Break ðŸ˜Š"
            ;;
        'Darwin')
            osascript -e 'display notification with title "Work Timer is up!" subtitle "Take a Break ðŸ˜Š" sound name "Crystal"'
            ;;
        *) ;;
        esac
    fi
}

br() {
	[ -x "$(command -v timer)" ] || go install github.com/caarlos0/timer@latest
    timer 10m -n "Break"
    if [ $? = 0 ]; then
        case $(uname -s) in
        'Linux')
            [ -x "$(command -v notify-send)" ] && notify-send "Break is over!" "Get back to work ðŸ«¡"
            ;;
        'Darwin')
            osascript -e 'display notification with title "Break is over!" subtitle "Get back to work ðŸ«¡" sound name "Crystal"'
            ;;
        *) ;;
        esac
    fi
}

# vim: syn=sh ft=sh
